[package]
name = "py32-metapac"
version = "0.0.2"
edition = "2021"
license = "MIT OR Apache-2.0"
repository = "https://github.com/py32-rs/py32-data"
description = "Peripheral Access Crate (PAC) for all PY32 chips, including metadata."

# `cargo publish` is unable to figure out which .rs files are needed due to the include! magic.
include = [
    "**/*.rs",
    "**/*.x",
    "Cargo.toml",
]

[package.metadata.docs.rs]
features = ["py32f030k28", "pac", "metadata"]
default-target = "thumbv6m-none-eabi"
targets = []

[package.metadata.embassy_docs]
features = ["pac", "metadata"]
flavors = [
    { regex_feature = "py32f4.*", target = "thumbv7em-none-eabihf" },
    { regex_feature = "py32f0.*", target = "thumbv6m-none-eabi" },
    { regex_feature = "py32m.*", target = "thumbv6m-none-eabi" },
    { regex_feature = "py32l.*", target = "thumbv6m-none-eabi" },
    { regex_feature = "py32t.*", target = "thumbv6m-none-eabi" },
]

[dependencies]
cortex-m = "0.7.6"
cortex-m-rt = { version = ">=0.6.15,<0.8", optional = true }

[features]
default = ["pac"]

# Build the actual PAC. Set by default.
# If you just want the metadata, unset it with `default-features = false`.
pac = []

# Build the chip metadata.
# If set, a const `py32_metapac::METADATA` will be exported, containing all the
# metadata for the currently selected chip.
metadata = []

rt = ["cortex-m-rt/device"]
memory-x = []

# Chip-selection features
